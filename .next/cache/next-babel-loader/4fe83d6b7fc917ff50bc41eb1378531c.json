{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\UserList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    this.state = {\n      data: []\n    };\n    this.getUserList();\n  } // Firebaseからのデータ取得\n\n\n  getUserList() {\n    let db = firebase.database();\n    let ref = db.ref('friend_info/1');\n    let ref2;\n    let dataList = [];\n    let self = this;\n    ref.orderByKey().on('value', snapshot => {\n      for (let i in snapshot.val()) {\n        console.log(i);\n\n        if (snapshot.val()[i].active_flag == 0) {\n          break;\n        }\n\n        ref2 = db.ref('user_info/' + i);\n        ref.orderByKey().on('value', snapshot => {\n          console.log('data:' + snapshot.val());\n          dataList.push(snapshot.val());\n        });\n      }\n\n      self.setState({\n        data: dataList\n      });\n    });\n  } // データ表示の生成\n\n\n  getTableData() {\n    let result = [];\n\n    if (this.state.data == null || this.state.data.length == 0) {\n      return [__jsx(\"tr\", {\n        key: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 33\n        }\n      }, \"NO DATA.\"))];\n    }\n\n    for (let i in this.state.data) {\n      result.push(__jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, __jsx(\"td\", {\n        class: \"user_image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, \"image\"), __jsx(\"td\", {\n        class: \"user_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }\n      }, this.state.data[i].user_name)));\n    }\n\n    return result;\n  }\n\n  render() {\n    if (this.state.data.length == 0) {\n      this.getUserList();\n    }\n\n    return __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, this.getTableData()));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["C:/env/react/next_chat/components/UserList.js"],"names":["React","Component","firebase","UserList","constructor","props","fontSize","padding","state","data","getUserList","db","database","ref","ref2","dataList","self","orderByKey","on","snapshot","i","val","console","log","active_flag","push","setState","getTableData","result","length","user_name","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nclass UserList extends Component {\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n        this.getUserList();\r\n    }\r\n\r\n    // Firebaseからのデータ取得\r\n    getUserList() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('friend_info/1');\r\n        let ref2;\r\n        let dataList = [];\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            for (let i in snapshot.val()) {\r\n                console.log(i);\r\n                if (snapshot.val()[i].active_flag == 0) {\r\n                    break;\r\n                }\r\n                ref2 = db.ref('user_info/' + i);\r\n                ref.orderByKey().on('value', (snapshot) => {\r\n                    console.log('data:' + snapshot.val());\r\n                    dataList.push(snapshot.val());\r\n                })\r\n            }\r\n            self.setState({\r\n                data: dataList\r\n            });\r\n        });\r\n    }\r\n\r\n    // データ表示の生成\r\n    getTableData() {\r\n        let result = [];\r\n        if (this.state.data == null || this.state.data.length == 0) {\r\n            return [<tr key=\"0\"><th>NO DATA.</th></tr>];\r\n        }\r\n        for (let i in this.state.data) {\r\n            result.push(\r\n                <tr>\r\n                    <td class=\"user_image\">image</td>\r\n                    <td class=\"user_name\">{this.state.data[i].user_name}</td>\r\n                </tr>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.data.length == 0) {\r\n            this.getUserList();\r\n        }\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {this.getTableData()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default UserList;"]},"metadata":{},"sourceType":"module"}