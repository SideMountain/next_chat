{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\UserList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    this.state = {\n      data: [],\n      activeUserData: []\n    };\n    this.getUserList(); // this.getActiveUserList();\n  } // Firebaseからのデータ取得\n\n\n  getUserList() {\n    let db = firebase.database();\n    let ref = db.ref('friend_info/1');\n    let self = this;\n    ref.orderByKey().on('value', snapshot => {\n      self.setState({\n        data: snapshot.val()\n      });\n      this.getActiveUserList();\n    });\n  } // アクティブユーザのみデータ取得\n\n\n  getActiveUserList() {\n    let activeUserList = [];\n    let db = firebase.database();\n    let ref;\n    let self = this;\n\n    for (let i in this.state.data) {\n      if (this.state.data[i].active_flag == 0) {\n        break;\n      }\n\n      ref = db.ref('user_info/' + i);\n      ref.orderByKey().on('value', snapshot => {\n        activeUserList.push(snapshot.val());\n        self.setState({\n          activeUserData: activeUserList\n        });\n      });\n    }\n  } // データ表示の生成\n\n\n  getTableData() {\n    let result = [];\n\n    if (this.state.activeUserData == null || this.state.activeUserData.length == 0) {\n      return [__jsx(\"tr\", {\n        key: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 33\n        }\n      }, \"NO DATA.\"))];\n    }\n\n    for (let i in this.state.activeUserData) {\n      result.push(__jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }\n      }, __jsx(\"td\", {\n        class: \"user_image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, \"image\"), __jsx(\"td\", {\n        class: \"user_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, this.state.activeUserData[i].user_name)));\n    }\n\n    return result;\n  }\n\n  render() {\n    if (this.state.data.length == 0) {\n      this.getUserList();\n    }\n\n    return __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }\n    }, this.getTableData()));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["C:/env/react/next_chat/components/UserList.js"],"names":["React","Component","firebase","UserList","constructor","props","fontSize","padding","state","data","activeUserData","getUserList","db","database","ref","self","orderByKey","on","snapshot","setState","val","getActiveUserList","activeUserList","i","active_flag","push","getTableData","result","length","user_name","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nclass UserList extends Component {\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            activeUserData: []\r\n        }\r\n        this.getUserList();\r\n        // this.getActiveUserList();\r\n    }\r\n\r\n    // Firebaseからのデータ取得\r\n    getUserList() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('friend_info/1');\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            self.setState({\r\n                data: snapshot.val()\r\n            });\r\n            this.getActiveUserList();\r\n        });\r\n    }\r\n\r\n    // アクティブユーザのみデータ取得\r\n    getActiveUserList() {\r\n        let activeUserList = [];\r\n        let db = firebase.database();\r\n        let ref;\r\n        let self = this;\r\n\r\n        for (let i in this.state.data) {\r\n            if (this.state.data[i].active_flag == 0) {\r\n                break;\r\n            }\r\n            ref = db.ref('user_info/' + i);\r\n            ref.orderByKey().on('value', (snapshot) => {\r\n                activeUserList.push(snapshot.val());\r\n                self.setState({\r\n                    activeUserData: activeUserList\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // データ表示の生成\r\n    getTableData() {\r\n        let result = [];\r\n        if (this.state.activeUserData == null || this.state.activeUserData.length == 0) {\r\n            return [<tr key=\"0\"><th>NO DATA.</th></tr>];\r\n        }\r\n        for (let i in this.state.activeUserData) {\r\n            result.push(\r\n                <tr>\r\n                    <td class=\"user_image\">image</td>\r\n                    <td class=\"user_name\">{this.state.activeUserData[i].user_name}</td>\r\n                </tr>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        if (this.state.data.length == 0) {\r\n            this.getUserList();\r\n            \r\n        }\r\n        return (\r\n            <table>\r\n                <tbody>\r\n                    {this.getTableData()}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\nexport default UserList;"]},"metadata":{},"sourceType":"module"}