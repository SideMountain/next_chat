{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\TalkRoom.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Lib from '../static/chat_lib';\nimport Router from 'next/router';\n\nvar TalkRoom = /*#__PURE__*/function (_Component) {\n  _inherits(TalkRoom, _Component);\n\n  var _super = _createSuper(TalkRoom);\n\n  function TalkRoom(props) {\n    var _this;\n\n    _classCallCheck(this, TalkRoom);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    _this.state = {\n      friendId: Router.query.id,\n      talkData: []\n    };\n    console.log(Router.query.id);\n\n    _this.getTalkData();\n\n    return _this;\n  } // トーク内容を取得\n\n\n  _createClass(TalkRoom, [{\n    key: \"getTalkData\",\n    value: function getTalkData() {\n      var db = firebase.database();\n      var ref = db.ref('messages/1/' + this.state.friendId);\n      var self = this;\n      var d = [];\n      ref.orderByKey().on('value', function (snapshot) {\n        self.setState({\n          talkData: snapshot.val().reverce\n        });\n      });\n    } // トーク履歴を作成\n\n  }, {\n    key: \"createTalkData\",\n    value: function createTalkData() {\n      var result = [];\n\n      if (this.state.talkData == null || this.state.talkData.length == 0) {\n        return [__jsx(\"tr\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }, __jsx(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }\n        }, \"No Talk Data.\"))];\n      }\n\n      for (var i in this.state.talkData) {\n        result.push(__jsx(\"tr\", {\n          \"class\": this.state.talkData[i].from_flag == 1 ? \"from_style\" : \"to_style\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }\n        }, __jsx(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, this.state.talkData[i].content), __jsx(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 21\n          }\n        }, this.state.talkData[i].create_date)));\n      }\n\n      return result;\n    }\n  }, {\n    key: \"go\",\n    value: function go() {\n      Router.push('/home');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.talkData == null || this.state.talkData.length == 0) {\n        this.getTalkData();\n      }\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }\n      }, __jsx(\"table\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, __jsx(\"tbody\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }\n      }, this.createTalkData())), __jsx(\"button\", {\n        onClick: this.go.bind(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 17\n        }\n      }, \"back\"));\n    }\n  }]);\n\n  return TalkRoom;\n}(Component);\n\nexport default TalkRoom;","map":{"version":3,"sources":["C:/env/react/next_chat/components/TalkRoom.js"],"names":["React","Component","firebase","Lib","Router","TalkRoom","props","fontSize","padding","state","friendId","query","id","talkData","console","log","getTalkData","db","database","ref","self","d","orderByKey","on","snapshot","setState","val","reverce","result","length","i","push","from_flag","content","create_date","createTalkData","go","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport Lib from '../static/chat_lib';\r\nimport Router from 'next/router';\r\n\r\nclass TalkRoom extends Component {\r\n\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            friendId: Router.query.id,\r\n            talkData: []\r\n        }\r\n        console.log(Router.query.id);\r\n        this.getTalkData();\r\n    }\r\n\r\n    // トーク内容を取得\r\n    getTalkData() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('messages/1/' + this.state.friendId);\r\n        let self = this;\r\n        let d = [];\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            self.setState({\r\n                talkData: snapshot.val().reverce\r\n            });\r\n        });\r\n    }\r\n\r\n    // トーク履歴を作成\r\n    createTalkData() {\r\n        let result = [];\r\n        if (this.state.talkData == null || this.state.talkData.length == 0) {\r\n            return [<tr><td>No Talk Data.</td></tr>];\r\n        }\r\n        for (let i in this.state.talkData) {\r\n            result.push(\r\n                <tr class={this.state.talkData[i].from_flag == 1 ? \"from_style\" : \"to_style\"}>\r\n                    <td>\r\n                        {this.state.talkData[i].content}\r\n                    </td>\r\n                    <td>\r\n                        {this.state.talkData[i].create_date}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    go() {\r\n        Router.push('/home');\r\n    }\r\n\r\n    render() {\r\n        if (this.state.talkData == null || this.state.talkData.length == 0) {\r\n            this.getTalkData();\r\n        }\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <tbody>\r\n                        {this.createTalkData()}\r\n                    </tbody>\r\n                </table>\r\n                <button onClick={this.go.bind()}>back</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TalkRoom;"]},"metadata":{},"sourceType":"module"}