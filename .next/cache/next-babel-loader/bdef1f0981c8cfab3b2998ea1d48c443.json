{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\TalkRoom.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Lib from '../static/chat_lib';\nimport Router from 'next/router';\n\nvar TalkRoom = /*#__PURE__*/function (_Component) {\n  _inherits(TalkRoom, _Component);\n\n  var _super = _createSuper(TalkRoom);\n\n  function TalkRoom(props) {\n    var _this;\n\n    _classCallCheck(this, TalkRoom);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    _this.state = {\n      friendId: Router.query.id,\n      talkData: []\n    };\n    console.log(Router.query.id);\n    return _this;\n  } // トーク内容を取得\n\n\n  _createClass(TalkRoom, [{\n    key: \"getTalkData\",\n    value: function getTalkData(friendId) {\n      var db = firebase.fatabase();\n      var ref = db.ref('messages/1/' + friendId);\n      var self = this;\n      var d = [];\n      ref.orderByKey().on('value', function (snapshot) {\n        d = Lib.deepcopy(snapshot.val());\n        self.setState({\n          talkData: d\n        });\n      });\n    }\n  }, {\n    key: \"go\",\n    value: function go() {\n      Router.push('/home');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }\n      }, \"Hello.\");\n    }\n  }]);\n\n  return TalkRoom;\n}(Component);\n\nexport default TalkRoom;","map":{"version":3,"sources":["C:/env/react/next_chat/components/TalkRoom.js"],"names":["React","Component","firebase","Lib","Router","TalkRoom","props","fontSize","padding","state","friendId","query","id","talkData","console","log","db","fatabase","ref","self","d","orderByKey","on","snapshot","deepcopy","val","setState","push"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,aAAnB;;IAEMC,Q;;;;;AAOF,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,4DALX;AACJC,MAAAA,QAAQ,EAAE,MADN;AAEJC,MAAAA,OAAO,EAAE;AAFL,KAKW;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAEN,MAAM,CAACO,KAAP,CAAaC,EADd;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACO,KAAP,CAAaC,EAAzB;AANe;AAOlB,G,CAED;;;;;gCACYF,Q,EAAU;AAClB,UAAIM,EAAE,GAAGd,QAAQ,CAACe,QAAT,EAAT;AACA,UAAIC,GAAG,GAAGF,EAAE,CAACE,GAAH,CAAO,gBAAgBR,QAAvB,CAAV;AACA,UAAIS,IAAI,GAAG,IAAX;AACA,UAAIC,CAAC,GAAG,EAAR;AACAF,MAAAA,GAAG,CAACG,UAAJ,GAAiBC,EAAjB,CAAoB,OAApB,EAA6B,UAACC,QAAD,EAAc;AACvCH,QAAAA,CAAC,GAAGjB,GAAG,CAACqB,QAAJ,CAAaD,QAAQ,CAACE,GAAT,EAAb,CAAJ;AACAN,QAAAA,IAAI,CAACO,QAAL,CAAc;AACVb,UAAAA,QAAQ,EAAEO;AADA,SAAd;AAGH,OALD;AAMH;;;yBAEI;AACDhB,MAAAA,MAAM,CAACuB,IAAP,CAAY,OAAZ;AACH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKH;;;;EAxCkB1B,S;;AA6CvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport Lib from '../static/chat_lib';\r\nimport Router from 'next/router';\r\n\r\nclass TalkRoom extends Component {\r\n\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            friendId: Router.query.id,\r\n            talkData: []\r\n        }\r\n        console.log(Router.query.id);\r\n    }\r\n\r\n    // トーク内容を取得\r\n    getTalkData(friendId) {\r\n        let db = firebase.fatabase();\r\n        let ref = db.ref('messages/1/' + friendId);\r\n        let self = this;\r\n        let d = [];\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            d = Lib.deepcopy(snapshot.val());\r\n            self.setState({\r\n                talkData: d\r\n            });\r\n        })\r\n    }\r\n\r\n    go() {\r\n        Router.push('/home');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>Hello.</div>\r\n\r\n        )\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\nexport default TalkRoom;"]},"metadata":{},"sourceType":"module"}