{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\AddFriend.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nvar AddFriend = /*#__PURE__*/function (_Component) {\n  _inherits(AddFriend, _Component);\n\n  var _super = _createSuper(AddFriend);\n\n  function AddFriend(props) {\n    var _this;\n\n    _classCallCheck(this, AddFriend);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      address: '',\n      friendName: ''\n    };\n    _this.onChangeAddress = _this.onChangeAddress.bind(_assertThisInitialized(_this));\n    _this.doSearch = _this.doSearch.bind(_assertThisInitialized(_this));\n    return _this;\n  } // 入力されたアドレスをステートにセット\n\n\n  _createClass(AddFriend, [{\n    key: \"onChangeAddress\",\n    value: function onChangeAddress(e) {\n      this.setState({\n        address: e.target.value\n      });\n    } // アドレスからユーザIDを検索する\n\n  }, {\n    key: \"doSearch\",\n    value: function doSearch() {\n      var _this2 = this;\n\n      var key = this.state.address;\n      var db = firebase.database();\n      var ref = db.ref('address_info/' + key);\n      var userId;\n      ref.orderByKey().on('value', function (snapshot) {\n        userId = snapshot.val();\n        console.log('userId:' + userId);\n\n        if (userId != null) {\n          _this2.getUserInfo(userId);\n        }\n      });\n    } // ユーザIDからユーザ情報を取得する\n\n  }, {\n    key: \"getUserInfo\",\n    value: function getUserInfo(userId) {\n      var _this3 = this;\n\n      var db = firebase.database();\n      var ref = db.ref('user_info/' + userId);\n      ref.orderByKey().on('value', function (snapshot) {\n        var res = snapshot.val();\n        console.log('userInfo:' + JSON.stringify(snapshot.val()));\n\n        _this3.setState({\n          friendName: res.user_name\n        });\n      });\n    } // 検索結果を表示する\n\n  }, {\n    key: \"createFriendInfo\",\n    value: function createFriendInfo() {\n      var result;\n\n      if (this.state.friendName == '') {\n        result = ['※入力されたアドレスに紐づくユーザは存在しません。'];\n      } else {\n        result = [__jsx(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 23\n          }\n        }, this.state.friendName)];\n      }\n\n      console.log('result:' + result);\n      return result;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }\n      }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\uFF1A\", __jsx(\"input\", {\n        type: \"text\",\n        size: \"40\",\n        value: this.state.address,\n        onChange: this.onChangeAddress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }), __jsx(\"button\", {\n        onClick: this.doSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, \"\\u691C\\u7D22\"), this.state.friendName != '' ? __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, this.createFriendInfo()) : __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, \"\\u203B\\u8FFD\\u52A0\\u3057\\u305F\\u3044\\u53CB\\u4EBA\\u306E\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u300C\\u691C\\u7D22\\u300D\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"));\n    }\n  }]);\n\n  return AddFriend;\n}(Component);\n\nexport default AddFriend;","map":{"version":3,"sources":["C:/env/react/next_chat/components/AddFriend.js"],"names":["React","Component","firebase","AddFriend","props","state","address","friendName","onChangeAddress","bind","doSearch","e","setState","target","value","key","db","database","ref","userId","orderByKey","on","snapshot","val","console","log","getUserInfo","res","JSON","stringify","user_name","result","createFriendInfo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nclass AddFriend extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            address: '',\r\n            friendName: ''\r\n        }\r\n        this.onChangeAddress = this.onChangeAddress.bind(this);\r\n        this.doSearch = this.doSearch.bind(this);\r\n    }\r\n\r\n    // 入力されたアドレスをステートにセット\r\n    onChangeAddress(e) {\r\n        this.setState({\r\n            address: e.target.value\r\n        })\r\n    }\r\n\r\n    // アドレスからユーザIDを検索する\r\n    doSearch() {\r\n        let key = this.state.address;\r\n        let db = firebase.database();\r\n        let ref = db.ref('address_info/' + key);\r\n        let userId;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            userId = snapshot.val();\r\n            console.log('userId:' + userId);\r\n            if (userId != null) {\r\n                this.getUserInfo(userId);\r\n            }\r\n        });\r\n    }\r\n\r\n    // ユーザIDからユーザ情報を取得する\r\n    getUserInfo(userId) {\r\n        let db = firebase.database();\r\n        let ref = db.ref('user_info/' + userId);\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            let res = snapshot.val();\r\n            console.log('userInfo:' + JSON.stringify(snapshot.val()));\r\n            this.setState({\r\n                friendName: res.user_name\r\n            })\r\n        });\r\n    }\r\n\r\n    // 検索結果を表示する\r\n    createFriendInfo() {\r\n        let result;\r\n        if (this.state.friendName == '') {\r\n            result = ['※入力されたアドレスに紐づくユーザは存在しません。'];\r\n        } else {\r\n            result = [<span>{this.state.friendName}</span>]\r\n        }\r\n        console.log('result:' + result);\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                メールアドレス：<input type=\"text\" size=\"40\" value={this.state.address} onChange={this.onChangeAddress} />\r\n                <button onClick={this.doSearch}>検索</button>\r\n                {this.state.friendName != ''\r\n                ?\r\n                <div>\r\n                    {this.createFriendInfo()}\r\n                </div>\r\n                :\r\n                <div>\r\n                    ※追加したい友人のメールアドレスを入力して「検索」をクリックしてください。\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddFriend;"]},"metadata":{},"sourceType":"module"}