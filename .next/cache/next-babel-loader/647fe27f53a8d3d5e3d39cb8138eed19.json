{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\Login.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nvar Login = /*#__PURE__*/function (_Component) {\n  _inherits(Login, _Component);\n\n  var _super = _createSuper(Login);\n\n  function Login(props) {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _super.call(this, props);\n    _this.login = _this.login.bind(_assertThisInitialized(_this));\n    return _this;\n  } // ログイン処理\n\n\n  _createClass(Login, [{\n    key: \"login\",\n    value: function login() {\n      var _this2 = this;\n\n      var provider = new firebase.auth.GoogleAuthProvider();\n      var self = this;\n      firebase.auth().signInWithPopup(provider).then(function (result) {\n        _this2.props.dispatch({\n          type: 'UPDATE_USER',\n          value: {\n            login: true,\n            user_name: result.user.displayName,\n            address: result.user.email,\n            data: _this2.props.data\n          }\n        });\n\n        console.log('now login');\n        console.log(result.user.displayName);\n      });\n    } // ログアウト処理\n\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      console.log('logout');\n      firebase.auth().signOut();\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: false,\n          user_name: '(click here!)',\n          address: '',\n          data: []\n        }\n      });\n      this.props.onLogouted();\n    } // レンダリング\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        id: \"login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }\n      }, __jsx(\"span\", {\n        onClick: this.login,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }\n      }, \"LOGIN\"), this.props.user_name != null ? __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 49\n        }\n      }, this.props.user_name) : __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 81\n        }\n      }, \"not login\"));\n    }\n  }]);\n\n  return Login;\n}(Component);\n\nLogin = connect(function (state) {\n  return state;\n})(Login);\nexport default Login;","map":{"version":3,"sources":["C:/env/react/next_chat/components/Login.js"],"names":["React","Component","connect","firebase","Login","props","login","bind","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","user_name","user","displayName","address","email","data","console","log","signOut","onLogouted","state"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP;;IAEMC,K;;;;;AAEF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,+BAAb;AAFe;AAGlB,G,CAED;;;;;4BACQ;AAAA;;AACJ,UAAIC,QAAQ,GAAG,IAAIL,QAAQ,CAACM,IAAT,CAAcC,kBAAlB,EAAf;AACA,UAAIC,IAAI,GAAG,IAAX;AACAR,MAAAA,QAAQ,CAACM,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EAA0CK,IAA1C,CAA+C,UAACC,MAAD,EAAY;AACvD,QAAA,MAAI,CAACT,KAAL,CAAWU,QAAX,CAAoB;AAChBC,UAAAA,IAAI,EAAE,aADU;AAEhBC,UAAAA,KAAK,EAAE;AACHX,YAAAA,KAAK,EAAE,IADJ;AAEHY,YAAAA,SAAS,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFpB;AAGHC,YAAAA,OAAO,EAAEP,MAAM,CAACK,IAAP,CAAYG,KAHlB;AAIHC,YAAAA,IAAI,EAAE,MAAI,CAAClB,KAAL,CAAWkB;AAJd;AAFS,SAApB;;AASAC,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYX,MAAM,CAACK,IAAP,CAAYC,WAAxB;AACH,OAZD;AAaH,K,CAED;;;;6BACS;AACLI,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAtB,MAAAA,QAAQ,CAACM,IAAT,GAAgBiB,OAAhB;AACA,WAAKrB,KAAL,CAAWU,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,aADU;AAEhBC,QAAAA,KAAK,EAAE;AACHX,UAAAA,KAAK,EAAE,KADJ;AAEHY,UAAAA,SAAS,EAAE,eAFR;AAGHG,UAAAA,OAAO,EAAE,EAHN;AAIHE,UAAAA,IAAI,EAAE;AAJH;AAFS,OAApB;AASA,WAAKlB,KAAL,CAAWsB,UAAX;AACH,K,CAED;;;;6BACS;AACL,aACI;AAAK,QAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAM,QAAA,OAAO,EAAE,KAAKrB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAIK,KAAKD,KAAL,CAAWa,SAAX,IAAwB,IAAxB,GAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAI,KAAKb,KAAL,CAAWa,SAAf,CAA/B,GAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAJpE,CADJ;AAQH;;;;EApDejB,S;;AAsDpBG,KAAK,GAAGF,OAAO,CAAC,UAAC0B,KAAD;AAAA,SAAWA,KAAX;AAAA,CAAD,CAAP,CAA0BxB,KAA1B,CAAR;AACA,eAAeA,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    // ログイン処理\r\n    login() {\r\n        let provider = new firebase.auth.GoogleAuthProvider();\r\n        var self = this;\r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            this.props.dispatch({\r\n                type: 'UPDATE_USER',\r\n                value: {\r\n                    login: true,\r\n                    user_name: result.user.displayName,\r\n                    address: result.user.email,\r\n                    data: this.props.data\r\n                }\r\n            });\r\n            console.log('now login');\r\n            console.log(result.user.displayName);\r\n        });\r\n    }\r\n\r\n    // ログアウト処理\r\n    logout() {\r\n        console.log('logout');\r\n        firebase.auth().signOut();\r\n        this.props.dispatch({\r\n            type: 'UPDATE_USER',\r\n            value: {\r\n                login: false,\r\n                user_name: '(click here!)',\r\n                address: '',\r\n                data: []\r\n            }\r\n        });\r\n        this.props.onLogouted();\r\n    }\r\n\r\n    // レンダリング\r\n    render() {\r\n        return (\r\n            <div id=\"login\">\r\n                <span onClick={this.login}>\r\n                    LOGIN\r\n                </span>\r\n                {this.props.user_name != null ? <p>{this.props.user_name}</p> : <p>not login</p>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nLogin = connect((state) => state)(Login);\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}