{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\TalkRoom.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Lib from '../static/chat_lib';\nimport Router from 'next/router';\nimport Layout from '../components/Layout';\n\nclass TalkRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    this.state = {\n      friendId: Router.query.user_id,\n      friendName: '',\n      talkData: [],\n      content: '',\n      lastId: -1\n    };\n    this.getFriendName();\n    this.getLastId();\n    this.getTalkData();\n    this.doAction = this.doAction.bind(this);\n    this.onChangeContent = this.onChangeContent.bind(this);\n  } // トーク内容を取得\n\n\n  getTalkData() {\n    let db = firebase.database();\n    let ref = db.ref('messages/1/' + this.state.friendId);\n    let self = this;\n    ref.orderByKey().on('value', snapshot => {\n      let res = snapshot.val();\n\n      if (res == null || res.length == 0) {\n        return;\n      }\n\n      self.setState({\n        talkData: snapshot.val()\n      }, () => console.log('talkData:' + this.state.talkData));\n    });\n  } // 友達名を取得\n\n\n  getFriendName() {\n    let db = firebase.database();\n    let ref = db.ref('user_info/' + this.state.friendId);\n    let self = this;\n    ref.orderByKey().on('value', snapshot => {\n      let res = snapshot.val();\n      console.log('res:' + res.user_name);\n      self.setState({\n        friendName: res.user_name\n      }, () => console.log('talkData2:' + this.state.talkData));\n      console.log('state1:' + this.state.friendName);\n    });\n  } // コンソール\n\n\n  printName(val) {\n    console.log('state2:' + this.state.friendName + '  val:' + val);\n  } // トーク履歴を作成\n\n\n  createTalkData() {\n    let result = [];\n\n    if (this.state.talkData == null || this.state.talkData.length == 0) {\n      return [__jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }\n      }, \"No Talk Data.\"))];\n    }\n\n    for (let i in this.state.talkData) {\n      result.push(__jsx(\"tr\", {\n        class: this.state.talkData[i].from_flag == 1 ? \"from_style\" : \"to_style\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, this.state.talkData[i].content), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }\n      }, this.state.talkData[i].create_date)));\n    }\n\n    return result;\n  } // 最後のIDを取得\n\n\n  getLastId() {\n    let db = firebase.database();\n    let ref = db.ref('messages/1/' + this.state.friendId);\n    let self = this;\n    ref.orderByKey().limitToLast(1).on('value', snapshot => {\n      let res = snapshot.val();\n\n      if (res == null || res.length == 0) {\n        self.setState({\n          lastId: 1\n        });\n        return;\n      }\n\n      for (let i in res) {\n        self.setState({\n          lastId: i\n        });\n        return;\n      }\n    });\n  } // メッセージ内容\n\n\n  onChangeContent(e) {\n    this.setState({\n      content: e.target.value\n    });\n  } // メッセージ送信\n\n\n  doAction(e) {\n    if (this.state.lastId == -1) {\n      return;\n    }\n\n    if (this.state.content == '') {\n      return;\n    }\n\n    let key = this.state.content;\n    let now = new Date().toLocaleString();\n    let userId = this.state.lastId * 1 + 1;\n    let data = {\n      content: this.state.content,\n      from_flag: 1,\n      read_flag: 0,\n      create_date: now,\n      update_date: now\n    };\n    let db = firebase.database();\n    let ref = db.ref('messages/1/' + this.state.friendId + '/' + userId);\n    ref.set(data);\n    this.setState({\n      content: '',\n      lastId: -1\n    });\n  } // 戻る\n\n\n  go() {\n    Router.push('/home');\n  }\n\n  render() {\n    if (this.state.talkData == null || this.state.talkData.length == 0) {\n      this.getTalkData();\n    }\n\n    if (this.state.lastId == -1) {\n      this.getLastId();\n    }\n\n    if (this.state.friendName == '') {\n      this.getFriendName();\n    }\n\n    return __jsx(Layout, {\n      header: \"Talk Room.\",\n      titile: this.state.friendName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 17\n      }\n    }, this.state.lastId == -1 ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 21\n      }\n    }, \"Please wait...\") : __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, this.createTalkData(), __jsx(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      size: \"30\",\n      value: this.state.content,\n      onChange: this.onChangeContent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 37\n      }\n    })), __jsx(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 33\n      }\n    }, __jsx(\"button\", {\n      onClick: this.doAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, \"send\"))))), __jsx(\"button\", {\n      onClick: this.go.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, \"home\")));\n  }\n\n}\n\nexport default TalkRoom;","map":{"version":3,"sources":["C:/env/react/next_chat/components/TalkRoom.js"],"names":["React","Component","firebase","Lib","Router","Layout","TalkRoom","constructor","props","fontSize","padding","state","friendId","query","user_id","friendName","talkData","content","lastId","getFriendName","getLastId","getTalkData","doAction","bind","onChangeContent","db","database","ref","self","orderByKey","on","snapshot","res","val","length","setState","console","log","user_name","printName","createTalkData","result","i","push","from_flag","create_date","limitToLast","e","target","value","key","now","Date","toLocaleString","userId","data","read_flag","update_date","set","go","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport Lib from '../static/chat_lib';\r\nimport Router from 'next/router';\r\nimport Layout from '../components/Layout';\r\n\r\nclass TalkRoom extends Component {\r\n\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            friendId: Router.query.user_id,\r\n            friendName: '',\r\n            talkData: [],\r\n            content: '',\r\n            lastId: -1\r\n        }\r\n        this.getFriendName();\r\n        this.getLastId();\r\n        this.getTalkData();\r\n        this.doAction = this.doAction.bind(this);\r\n        this.onChangeContent = this.onChangeContent.bind(this);\r\n    }\r\n\r\n    // トーク内容を取得\r\n    getTalkData() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('messages/1/' + this.state.friendId);\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            let res = snapshot.val();\r\n            if (res == null || res.length == 0) {\r\n                return;\r\n            }\r\n            self.setState({\r\n                talkData: snapshot.val()\r\n            }, () => console.log('talkData:' + this.state.talkData));\r\n        });\r\n    }\r\n\r\n    // 友達名を取得\r\n    getFriendName() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('user_info/' + this.state.friendId);\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            let res = snapshot.val();\r\n            console.log('res:' + res.user_name);\r\n            self.setState({\r\n                friendName: res.user_name\r\n            }, () => console.log('talkData2:' + this.state.talkData));\r\n            console.log('state1:' + this.state.friendName);\r\n        });\r\n    }\r\n\r\n    // コンソール\r\n    printName(val) {\r\n        console.log('state2:' + this.state.friendName + '  val:' + val);\r\n    }\r\n\r\n    // トーク履歴を作成\r\n    createTalkData() {\r\n        let result = [];\r\n        if (this.state.talkData == null || this.state.talkData.length == 0) {\r\n            return [<tr><td>No Talk Data.</td></tr>];\r\n        }\r\n        for (let i in this.state.talkData) {\r\n            result.push(\r\n                <tr class={this.state.talkData[i].from_flag == 1 ? \"from_style\" : \"to_style\"}>\r\n                    <td>\r\n                        {this.state.talkData[i].content}\r\n                    </td>\r\n                    <td>\r\n                        {this.state.talkData[i].create_date}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // 最後のIDを取得\r\n    getLastId() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('messages/1/' + this.state.friendId);\r\n        let self = this;\r\n        ref.orderByKey().limitToLast(1).on('value', (snapshot) => {\r\n            let res = snapshot.val();\r\n            if (res == null || res.length == 0) {\r\n                self.setState({\r\n                    lastId: 1\r\n                });\r\n                return;\r\n            }\r\n            for(let i in res) {\r\n                self.setState({\r\n                    lastId:i\r\n                });\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    // メッセージ内容\r\n    onChangeContent(e) {\r\n        this.setState({\r\n            content: e.target.value\r\n        })\r\n    }\r\n\r\n    // メッセージ送信\r\n    doAction(e) {\r\n        if (this.state.lastId == -1) {\r\n            return;\r\n        }\r\n        if (this.state.content == '') {\r\n            return;\r\n        }\r\n        let key = this.state.content;\r\n        let now = new Date().toLocaleString();\r\n        let userId = this.state.lastId * 1 + 1;\r\n        let data = {\r\n            content: this.state.content,\r\n            from_flag: 1,\r\n            read_flag: 0,\r\n            create_date: now,\r\n            update_date: now\r\n        }\r\n        let db = firebase.database();\r\n        let ref = db.ref('messages/1/' + this.state.friendId + '/' + userId);\r\n        ref.set(data);\r\n        this.setState({\r\n            content: '',\r\n            lastId: -1\r\n        });\r\n    }\r\n\r\n    // 戻る\r\n    go() {\r\n        Router.push('/home');\r\n    }\r\n\r\n    render() {\r\n        if (this.state.talkData == null || this.state.talkData.length == 0) {\r\n            this.getTalkData();\r\n        }\r\n        if (this.state.lastId == -1) {\r\n            this.getLastId();\r\n        }\r\n        if (this.state.friendName == '') {\r\n            this.getFriendName();\r\n        }\r\n        return (\r\n            <Layout header=\"Talk Room.\" titile={this.state.friendName}>\r\n                <div>\r\n                    {this.state.lastId == -1\r\n                    ?\r\n                    <p>Please wait...</p>\r\n                    :\r\n                    <table>\r\n                        <tbody>\r\n                            {this.createTalkData()}\r\n                            <tr>\r\n                                <td><input type=\"text\" size=\"30\" value={this.state.content} onChange={this.onChangeContent} /></td>\r\n                                <td><button onClick={this.doAction}>send</button></td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                    }\r\n                    <button onClick={this.go.bind()}>home</button>\r\n                </div>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\nexport default TalkRoom;"]},"metadata":{},"sourceType":"module"}