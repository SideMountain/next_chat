{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\TalkList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Router from 'next/router';\n\nclass TalkList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    this.state = {\n      data: [],\n      activeUserData: [],\n      talkData: []\n    };\n    this.getUserList();\n  } // 友人データ取得\n\n\n  getUserList() {\n    let db = firebase.database();\n    let ref = db.ref('friend_info/1');\n    let self = this;\n    ref.orderByKey().on('value', snapshot => {\n      self.setState({\n        data: snapshot.val()\n      }, () => {\n        this.getActiveUserList();\n      });\n    });\n  } // アクティブユーザのみデータ取得\n\n\n  getActiveUserList() {\n    let activeUserList = [];\n    let db = firebase.database();\n    let ref;\n    let self = this;\n\n    for (let i in this.state.data) {\n      if (this.state.data[i].active_flag == 0) {\n        continue;\n      }\n\n      ref = db.ref('user_info/' + i);\n      ref.orderByKey().on('value', snapshot => {\n        console.log('activeUserList:' + JSON.stringify(snapshot.val()));\n        activeUserList.push(snapshot.val());\n        self.setState({\n          activeUserData: activeUserList\n        }, () => {\n          this.getTalkList();\n        });\n      });\n    }\n  } // トークリスト取得\n\n\n  getTalkList() {\n    let talkList = [];\n    let db = firebase.database();\n    let ref;\n    let self = this;\n\n    for (let i in this.state.activeUserData) {\n      ref = db.ref('messages/1/' + this.state.activeUserData[i].user_id);\n      ref.orderByKey().limitToLast(1).on('value', snapshot => {\n        let res = snapshot.val();\n\n        for (let j in res) {\n          talkList.push({\n            user_id: this.state.activeUserData[i].user_id,\n            user_name: this.state.activeUserData[i].user_name,\n            content: res[j].content,\n            from_flag: res[j].from_flag,\n            read_flag: res[j].read_flag,\n            create_date: res[j].create_date,\n            update_date: res[j].update_date\n          });\n          self.setState({\n            talkData: talkList\n          });\n        }\n      });\n    }\n  } // 表示するトークリストの生成\n\n\n  createTalkList() {\n    let result = [];\n\n    if (this.state.talkData == null || this.state.talkData.length == 0) {\n      return [__jsx(\"tr\", {\n        key: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, \"NO DATA.\"))];\n    }\n\n    for (let i in this.state.talkData) {\n      if (this.state.talkData[i] == null || this.state.talkData[i].length == 0) {\n        continue;\n      }\n\n      result.push(__jsx(\"tr\", {\n        \"data-tag\": this.state.talkData[i].user_id,\n        onClick: this.go.bind(null, this.state.talkData[i].user_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }, this.state.talkData[i].user_name), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }\n      }, this.state.talkData[i].content)));\n    }\n\n    return result;\n  } // ページ移動設定\n\n\n  go(userId) {\n    Router.push('/talk_room?user_id=' + userId);\n  }\n\n  render() {\n    if (this.state.data.length == 0) {\n      this.getUserList();\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, this.state.talkData.length == 0 ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Please wait...\") : __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, this.createTalkList())));\n  }\n\n}\n\nexport default TalkList;","map":{"version":3,"sources":["C:/env/react/next_chat/components/TalkList.js"],"names":["React","Component","firebase","Router","TalkList","constructor","props","fontSize","padding","state","data","activeUserData","talkData","getUserList","db","database","ref","self","orderByKey","on","snapshot","setState","val","getActiveUserList","activeUserList","i","active_flag","console","log","JSON","stringify","push","getTalkList","talkList","user_id","limitToLast","res","j","user_name","content","from_flag","read_flag","create_date","update_date","createTalkList","result","length","go","bind","userId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport Router from 'next/router';\r\n\r\nclass TalkList extends Component {\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            activeUserData: [],\r\n            talkData: []\r\n        }\r\n        this.getUserList();\r\n    }\r\n\r\n    // 友人データ取得\r\n    getUserList() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('friend_info/1');\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            self.setState({\r\n                data: snapshot.val()\r\n            }, () => {this.getActiveUserList();});\r\n        });\r\n    }\r\n\r\n    // アクティブユーザのみデータ取得\r\n    getActiveUserList() {\r\n        let activeUserList = [];\r\n        let db = firebase.database();\r\n        let ref;\r\n        let self = this;\r\n\r\n        for (let i in this.state.data) {\r\n            if (this.state.data[i].active_flag == 0) {\r\n                continue;\r\n            }\r\n            ref = db.ref('user_info/' + i);\r\n            ref.orderByKey().on('value', (snapshot) => {\r\n                console.log('activeUserList:' + JSON.stringify(snapshot.val()));\r\n                activeUserList.push(snapshot.val());\r\n                self.setState({\r\n                    activeUserData: activeUserList\r\n                }, () => {this.getTalkList()});\r\n            });\r\n        }\r\n    }\r\n\r\n    // トークリスト取得\r\n    getTalkList() {\r\n        let talkList = [];\r\n        let db = firebase.database();\r\n        let ref;\r\n        let self = this;\r\n        for (let i in this.state.activeUserData) {\r\n            ref = db.ref('messages/1/' + this.state.activeUserData[i].user_id);\r\n            ref.orderByKey().limitToLast(1).on('value', (snapshot) => {\r\n                let res = snapshot.val();\r\n                for (let j in res) {\r\n                    talkList.push({\r\n                        user_id: this.state.activeUserData[i].user_id,\r\n                        user_name: this.state.activeUserData[i].user_name,\r\n                        content: res[j].content,\r\n                        from_flag: res[j].from_flag,\r\n                        read_flag: res[j].read_flag,\r\n                        create_date: res[j].create_date,\r\n                        update_date: res[j].update_date\r\n                    });\r\n                    self.setState({\r\n                        talkData: talkList\r\n                    });    \r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // 表示するトークリストの生成\r\n    createTalkList() {\r\n        let result = [];\r\n        if (this.state.talkData == null || this.state.talkData.length == 0) {\r\n            return [<tr key=\"0\"><th>NO DATA.</th></tr>];\r\n        }\r\n        for (let i in this.state.talkData) {\r\n            if (this.state.talkData[i] == null || this.state.talkData[i].length == 0) {\r\n                continue;\r\n            }\r\n            result.push(\r\n                <tr data-tag={this.state.talkData[i].user_id}\r\n                    onClick={this.go.bind(null, this.state.talkData[i].user_id)}>\r\n                    <td>{this.state.talkData[i].user_name}</td>\r\n                    <td>{this.state.talkData[i].content}</td>\r\n                </tr>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // ページ移動設定\r\n    go(userId) {\r\n        Router.push('/talk_room?user_id=' + userId);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.data.length == 0) {\r\n            this.getUserList();\r\n        }\r\n        return (\r\n            <div>\r\n                {this.state.talkData.length == 0\r\n                ?\r\n                <p>Please wait...</p>\r\n                :\r\n                <table>\r\n                    <tbody>\r\n                        {this.createTalkList()}\r\n                    </tbody>\r\n                </table>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TalkList;"]},"metadata":{},"sourceType":"module"}