{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\Login.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n  } // ログイン処理\n\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          user_name: result.user.displayName,\n          address: result.user.email,\n          data: this.props.data\n        }\n      });\n      console.log('now login');\n      console.log(this.props.user_name);\n    });\n  } // ログアウト処理\n\n\n  logout() {\n    console.log('logout');\n    firebase.auth().signOut();\n    this.props.dispatch({\n      type: 'UPDATE_USER',\n      value: {\n        login: false,\n        user_name: '(click here!)',\n        address: '',\n        data: []\n      }\n    });\n    this.props.onLogouted();\n  } // レンダリング\n\n\n  render() {\n    return __jsx(\"div\", {\n      id: \"login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      onClick: this.login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"LOGIN\"), this.props.user_name != null ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 49\n      }\n    }, this.props.user_name) : __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 81\n      }\n    }, \"not login\"));\n  }\n\n}\n\nLogin = connect(state => state)(Login);\nexport default Login;","map":{"version":3,"sources":["C:/env/react/next_chat/components/Login.js"],"names":["React","Component","connect","firebase","Login","constructor","props","login","bind","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","user_name","user","displayName","address","email","data","console","log","logout","signOut","onLogouted","render","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP;;AAEA,MAAMC,KAAN,SAAoBH,SAApB,CAA8B;AAE1BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACH,GALyB,CAO1B;;;AACAD,EAAAA,KAAK,GAAG;AACJ,QAAIE,QAAQ,GAAG,IAAIN,QAAQ,CAACO,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AACAT,IAAAA,QAAQ,CAACO,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EAA0CK,IAA1C,CAAgDC,MAAD,IAAY;AACvD,WAAKT,KAAL,CAAWU,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAE,aADU;AAEhBC,QAAAA,KAAK,EAAE;AACHX,UAAAA,KAAK,EAAE,IADJ;AAEHY,UAAAA,SAAS,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFpB;AAGHC,UAAAA,OAAO,EAAEP,MAAM,CAACK,IAAP,CAAYG,KAHlB;AAIHC,UAAAA,IAAI,EAAE,KAAKlB,KAAL,CAAWkB;AAJd;AAFS,OAApB;AASAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpB,KAAL,CAAWa,SAAvB;AACH,KAZD;AAaH,GAxByB,CA0B1B;;;AACAQ,EAAAA,MAAM,GAAG;AACLF,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAvB,IAAAA,QAAQ,CAACO,IAAT,GAAgBkB,OAAhB;AACA,SAAKtB,KAAL,CAAWU,QAAX,CAAoB;AAChBC,MAAAA,IAAI,EAAE,aADU;AAEhBC,MAAAA,KAAK,EAAE;AACHX,QAAAA,KAAK,EAAE,KADJ;AAEHY,QAAAA,SAAS,EAAE,eAFR;AAGHG,QAAAA,OAAO,EAAE,EAHN;AAIHE,QAAAA,IAAI,EAAE;AAJH;AAFS,KAApB;AASA,SAAKlB,KAAL,CAAWuB,UAAX;AACH,GAxCyB,CA0C1B;;;AACAC,EAAAA,MAAM,GAAG;AACL,WACI;AAAK,MAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,OAAO,EAAE,KAAKvB,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAIK,KAAKD,KAAL,CAAWa,SAAX,IAAwB,IAAxB,GAA+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKb,KAAL,CAAWa,SAAf,CAA/B,GAA+D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJpE,CADJ;AAQH;;AApDyB;;AAsD9Bf,KAAK,GAAGF,OAAO,CAAE6B,KAAD,IAAWA,KAAZ,CAAP,CAA0B3B,KAA1B,CAAR;AACA,eAAeA,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nclass Login extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.login = this.login.bind(this);\r\n    }\r\n\r\n    // ログイン処理\r\n    login() {\r\n        let provider = new firebase.auth.GoogleAuthProvider();\r\n        var self = this;\r\n        firebase.auth().signInWithPopup(provider).then((result) => {\r\n            this.props.dispatch({\r\n                type: 'UPDATE_USER',\r\n                value: {\r\n                    login: true,\r\n                    user_name: result.user.displayName,\r\n                    address: result.user.email,\r\n                    data: this.props.data\r\n                }\r\n            });\r\n            console.log('now login');\r\n            console.log(this.props.user_name);\r\n        });\r\n    }\r\n\r\n    // ログアウト処理\r\n    logout() {\r\n        console.log('logout');\r\n        firebase.auth().signOut();\r\n        this.props.dispatch({\r\n            type: 'UPDATE_USER',\r\n            value: {\r\n                login: false,\r\n                user_name: '(click here!)',\r\n                address: '',\r\n                data: []\r\n            }\r\n        });\r\n        this.props.onLogouted();\r\n    }\r\n\r\n    // レンダリング\r\n    render() {\r\n        return (\r\n            <div id=\"login\">\r\n                <span onClick={this.login}>\r\n                    LOGIN\r\n                </span>\r\n                {this.props.user_name != null ? <p>{this.props.user_name}</p> : <p>not login</p>}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nLogin = connect((state) => state)(Login);\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}