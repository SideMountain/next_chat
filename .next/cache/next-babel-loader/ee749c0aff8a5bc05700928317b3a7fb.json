{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\TalkRoom.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Lib from '../static/chat_lib';\nimport Router from 'next/router';\n\nclass TalkRoom extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    this.state = {\n      friendId: Router.query.id,\n      talkData: []\n    };\n    console.log(Router.query.id);\n    this.getTalkData(this.state.friendId);\n  } // トーク内容を取得\n\n\n  getTalkData(friendId) {\n    let db = firebase.fatabase();\n    let ref = db.ref('messages/1/' + friendId);\n    let self = this;\n    let d = [];\n    ref.orderByKey().on('value', snapshot => {\n      d = Lib.deepcopy(snapshot.val());\n      console.log(snapshot.val());\n      self.setState({\n        talkData: d\n      });\n    });\n  } // トーク履歴を作成\n\n\n  createTalkData() {\n    let result = [];\n\n    if (this.state.talkData == null || this.state.talkData.length == 0) {\n      return [__jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }\n      }, \"No Talk Data.\"))];\n    }\n\n    for (let i in this.state.talkData) {\n      result.push(__jsx(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, this.state.talkData[i].content), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      }, this.state.talkData[i].create_date)));\n    }\n\n    return result;\n  }\n\n  go() {\n    Router.push('/home');\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    }, this.createTalkData())), __jsx(\"button\", {\n      onClick: this.go.bind(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"back\"));\n  }\n\n}\n\nexport default TalkRoom;","map":{"version":3,"sources":["C:/env/react/next_chat/components/TalkRoom.js"],"names":["React","Component","firebase","Lib","Router","TalkRoom","constructor","props","fontSize","padding","state","friendId","query","id","talkData","console","log","getTalkData","db","fatabase","ref","self","d","orderByKey","on","snapshot","deepcopy","val","setState","createTalkData","result","length","i","push","content","create_date","go","render","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport Lib from '../static/chat_lib';\r\nimport Router from 'next/router';\r\n\r\nclass TalkRoom extends Component {\r\n\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            friendId: Router.query.id,\r\n            talkData: []\r\n        }\r\n        console.log(Router.query.id);\r\n        this.getTalkData(this.state.friendId);\r\n    }\r\n\r\n    // トーク内容を取得\r\n    getTalkData(friendId) {\r\n        let db = firebase.fatabase();\r\n        let ref = db.ref('messages/1/' + friendId);\r\n        let self = this;\r\n        let d = [];\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            d = Lib.deepcopy(snapshot.val());\r\n            console.log(snapshot.val());\r\n            self.setState({\r\n                talkData: d\r\n            });\r\n        });\r\n    }\r\n\r\n    // トーク履歴を作成\r\n    createTalkData() {\r\n        let result = [];\r\n        if (this.state.talkData == null || this.state.talkData.length == 0) {\r\n            return [<tr><td>No Talk Data.</td></tr>];\r\n        }\r\n        for (let i in this.state.talkData) {\r\n            result.push(\r\n                <tr>\r\n                    <td>\r\n                        {this.state.talkData[i].content}\r\n                    </td>\r\n                    <td>\r\n                        {this.state.talkData[i].create_date}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    go() {\r\n        Router.push('/home');\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table>\r\n                    <tbody>\r\n                        {this.createTalkData()}\r\n                    </tbody>\r\n                </table>\r\n                <button onClick={this.go.bind()}>back</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default TalkRoom;"]},"metadata":{},"sourceType":"module"}