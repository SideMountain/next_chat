{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\AddFriend.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\n\nclass AddFriend extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      friendName: null\n    };\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.doSearch = this.doSearch.bind(this);\n  } // 入力されたアドレスをステートにセット\n\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value,\n      friendName: ''\n    });\n  } // アドレスからユーザIDを検索する\n\n\n  doSearch() {\n    let key = this.state.address;\n    let db = firebase.database();\n    let ref = db.ref('address_info/' + key);\n    let userId;\n    ref.orderByKey().on('value', snapshot => {\n      userId = snapshot.val();\n      console.log('userId:' + userId);\n\n      if (userId != null) {\n        this.getUserInfo(userId);\n      }\n    });\n  } // ユーザIDからユーザ情報を取得する\n\n\n  getUserInfo(userId) {\n    let db = firebase.database();\n    let ref = db.ref('user_info/' + userId);\n    ref.orderByKey().on('value', snapshot => {\n      let res = snapshot.val();\n      console.log('userInfo:' + JSON.stringify(snapshot.val()));\n      this.setState({\n        friendName: res.user_name\n      });\n    });\n  } // 検索結果を表示する\n\n\n  createFriendInfo() {\n    let result;\n\n    if (this.state.friendName == '') {\n      result = ['※入力されたアドレスに紐づくユーザは存在しません。'];\n    } else {\n      result = [__jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 23\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 28\n        }\n      }, this.state.friendName), __jsx(\"button\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 64\n        }\n      }, \"\\u8FFD\\u52A0\"))];\n    }\n\n    console.log('result:' + result);\n    return result;\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\uFF1A\", __jsx(\"input\", {\n      type: \"text\",\n      size: \"40\",\n      value: this.state.address,\n      onChange: this.onChangeAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }), __jsx(\"button\", {\n      onClick: this.doSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, \"\\u691C\\u7D22\"), this.state.friendName != null ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, this.createFriendInfo()) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }\n    }, \"\\u203B\\u8FFD\\u52A0\\u3057\\u305F\\u3044\\u53CB\\u4EBA\\u306E\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u300C\\u691C\\u7D22\\u300D\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"));\n  }\n\n}\n\nexport default AddFriend;","map":{"version":3,"sources":["C:/env/react/next_chat/components/AddFriend.js"],"names":["React","Component","firebase","AddFriend","constructor","props","state","address","friendName","onChangeAddress","bind","doSearch","e","setState","target","value","key","db","database","ref","userId","orderByKey","on","snapshot","val","console","log","getUserInfo","res","JSON","stringify","user_name","createFriendInfo","result","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,UAAU,EAAE;AAFH,KAAb;AAIA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACH,GAV6B,CAY9B;;;AACAD,EAAAA,eAAe,CAACG,CAAD,EAAI;AACf,SAAKC,QAAL,CAAc;AACVN,MAAAA,OAAO,EAAEK,CAAC,CAACE,MAAF,CAASC,KADR;AAEVP,MAAAA,UAAU,EAAE;AAFF,KAAd;AAIH,GAlB6B,CAoB9B;;;AACAG,EAAAA,QAAQ,GAAG;AACP,QAAIK,GAAG,GAAG,KAAKV,KAAL,CAAWC,OAArB;AACA,QAAIU,EAAE,GAAGf,QAAQ,CAACgB,QAAT,EAAT;AACA,QAAIC,GAAG,GAAGF,EAAE,CAACE,GAAH,CAAO,kBAAkBH,GAAzB,CAAV;AACA,QAAII,MAAJ;AACAD,IAAAA,GAAG,CAACE,UAAJ,GAAiBC,EAAjB,CAAoB,OAApB,EAA8BC,QAAD,IAAc;AACvCH,MAAAA,MAAM,GAAGG,QAAQ,CAACC,GAAT,EAAT;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAYN,MAAxB;;AACA,UAAIA,MAAM,IAAI,IAAd,EAAoB;AAChB,aAAKO,WAAL,CAAiBP,MAAjB;AACH;AACJ,KAND;AAOH,GAjC6B,CAmC9B;;;AACAO,EAAAA,WAAW,CAACP,MAAD,EAAS;AAChB,QAAIH,EAAE,GAAGf,QAAQ,CAACgB,QAAT,EAAT;AACA,QAAIC,GAAG,GAAGF,EAAE,CAACE,GAAH,CAAO,eAAeC,MAAtB,CAAV;AACAD,IAAAA,GAAG,CAACE,UAAJ,GAAiBC,EAAjB,CAAoB,OAApB,EAA8BC,QAAD,IAAc;AACvC,UAAIK,GAAG,GAAGL,QAAQ,CAACC,GAAT,EAAV;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAcG,IAAI,CAACC,SAAL,CAAeP,QAAQ,CAACC,GAAT,EAAf,CAA1B;AACA,WAAKX,QAAL,CAAc;AACVL,QAAAA,UAAU,EAAEoB,GAAG,CAACG;AADN,OAAd;AAGH,KAND;AAOH,GA9C6B,CAgD9B;;;AACAC,EAAAA,gBAAgB,GAAG;AACf,QAAIC,MAAJ;;AACA,QAAI,KAAK3B,KAAL,CAAWE,UAAX,IAAyB,EAA7B,EAAiC;AAC7ByB,MAAAA,MAAM,GAAG,CAAC,2BAAD,CAAT;AACH,KAFD,MAEO;AACHA,MAAAA,MAAM,GAAG,CAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAO,KAAK3B,KAAL,CAAWE,UAAlB,CAAL,EAAyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAzC,CAAD,CAAT;AACH;;AACDiB,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYO,MAAxB;AACA,WAAOA,MAAP;AACH;;AAEDC,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2DACY;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,IAAxB;AAA6B,MAAA,KAAK,EAAE,KAAK5B,KAAL,CAAWC,OAA/C;AAAwD,MAAA,QAAQ,EAAE,KAAKE,eAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADZ,EAEI;AAAQ,MAAA,OAAO,EAAE,KAAKE,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAGK,KAAKL,KAAL,CAAWE,UAAX,IAAyB,IAAzB,GAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKwB,gBAAL,EADL,CAFC,GAMD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wOATJ,CADJ;AAgBH;;AA7E6B;;AA+ElC,eAAe7B,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\n\r\nclass AddFriend extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            address: '',\r\n            friendName: null\r\n        }\r\n        this.onChangeAddress = this.onChangeAddress.bind(this);\r\n        this.doSearch = this.doSearch.bind(this);\r\n    }\r\n\r\n    // 入力されたアドレスをステートにセット\r\n    onChangeAddress(e) {\r\n        this.setState({\r\n            address: e.target.value,\r\n            friendName: ''\r\n        })\r\n    }\r\n\r\n    // アドレスからユーザIDを検索する\r\n    doSearch() {\r\n        let key = this.state.address;\r\n        let db = firebase.database();\r\n        let ref = db.ref('address_info/' + key);\r\n        let userId;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            userId = snapshot.val();\r\n            console.log('userId:' + userId);\r\n            if (userId != null) {\r\n                this.getUserInfo(userId);\r\n            }\r\n        });\r\n    }\r\n\r\n    // ユーザIDからユーザ情報を取得する\r\n    getUserInfo(userId) {\r\n        let db = firebase.database();\r\n        let ref = db.ref('user_info/' + userId);\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            let res = snapshot.val();\r\n            console.log('userInfo:' + JSON.stringify(snapshot.val()));\r\n            this.setState({\r\n                friendName: res.user_name\r\n            })\r\n        });\r\n    }\r\n\r\n    // 検索結果を表示する\r\n    createFriendInfo() {\r\n        let result;\r\n        if (this.state.friendName == '') {\r\n            result = ['※入力されたアドレスに紐づくユーザは存在しません。'];\r\n        } else {\r\n            result = [<div><span>{this.state.friendName}</span><button>追加</button></div>]\r\n        }\r\n        console.log('result:' + result);\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                メールアドレス：<input type=\"text\" size=\"40\" value={this.state.address} onChange={this.onChangeAddress} />\r\n                <button onClick={this.doSearch}>検索</button>\r\n                {this.state.friendName != null\r\n                ?\r\n                <div>\r\n                    {this.createFriendInfo()}\r\n                </div>\r\n                :\r\n                <div>\r\n                    ※追加したい友人のメールアドレスを入力して「検索」をクリックしてください。\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddFriend;"]},"metadata":{},"sourceType":"module"}