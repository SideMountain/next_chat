{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\AddFriend.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Lib from '../static/chat_lib';\n\nclass AddFriend extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      address: '',\n      friendId: '',\n      friendName: null\n    };\n    this.onChangeAddress = this.onChangeAddress.bind(this);\n    this.doSearch = this.doSearch.bind(this);\n    this.addFriends = this.addFriends.bind(this);\n  } // 入力されたアドレスをステートにセット\n\n\n  onChangeAddress(e) {\n    this.setState({\n      address: e.target.value\n    });\n  } // アドレスからユーザIDを検索する\n\n\n  doSearch() {\n    // 「.」を「*」にエンコード(firebaseでは検索に「.」が使用できないため)\n    let key = Lib.encodeAddress(this.state.address);\n    let db = firebase.database();\n    let ref = db.ref('address_info/' + key);\n    let userId;\n    ref.orderByKey().on('value', snapshot => {\n      userId = snapshot.val();\n      this.setState({\n        friendId: userId,\n        friendName: ''\n      });\n      console.log('userId:' + userId);\n\n      if (userId != null) {\n        this.getUserInfo(userId);\n      }\n    });\n  } // ユーザIDからユーザ情報を取得する\n\n\n  getUserInfo(userId) {\n    let db = firebase.database();\n    let ref = db.ref('user_info/' + userId);\n    ref.orderByKey().on('value', snapshot => {\n      let res = snapshot.val();\n      console.log('userInfo:' + JSON.stringify(snapshot.val()));\n      this.setState({\n        friendName: res.user_name\n      });\n    });\n  } // 検索結果を表示する\n\n\n  createFriendInfo() {\n    let result;\n\n    if (this.state.friendName == '') {\n      result = ['※入力されたアドレスに紐づくユーザは存在しません。'];\n    } else {\n      result = [__jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, this.state.friendName), __jsx(\"button\", {\n        oncClick: this.addFriends,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, \"\\u8FFD\\u52A0\"))];\n    }\n\n    console.log('result:' + result);\n    return result;\n  } // 友人リストへ追加\n\n\n  addFriends() {\n    let db = firebase.database();\n    let ref = db.ref('friend_info/1/' + this.state.friendId);\n    let now = new Date().toLocaleString();\n    let data = {\n      active_flag: 1,\n      create_date: now,\n      update_date: now\n    };\n    ref.set(data);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\uFF1A\", __jsx(\"input\", {\n      type: \"text\",\n      size: \"40\",\n      value: this.state.address,\n      onChange: this.onChangeAddress,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }), __jsx(\"button\", {\n      onClick: this.doSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    }, \"\\u691C\\u7D22\"), this.state.friendName != null ? __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, this.createFriendInfo()) : __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, \"\\u203B\\u8FFD\\u52A0\\u3057\\u305F\\u3044\\u53CB\\u4EBA\\u306E\\u30E1\\u30FC\\u30EB\\u30A2\\u30C9\\u30EC\\u30B9\\u3092\\u5165\\u529B\\u3057\\u3066\\u300C\\u691C\\u7D22\\u300D\\u3092\\u30AF\\u30EA\\u30C3\\u30AF\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\\u3002\"));\n  }\n\n}\n\nexport default AddFriend;","map":{"version":3,"sources":["C:/env/react/next_chat/components/AddFriend.js"],"names":["React","Component","firebase","Lib","AddFriend","constructor","props","state","address","friendId","friendName","onChangeAddress","bind","doSearch","addFriends","e","setState","target","value","key","encodeAddress","db","database","ref","userId","orderByKey","on","snapshot","val","console","log","getUserInfo","res","JSON","stringify","user_name","createFriendInfo","result","now","Date","toLocaleString","data","active_flag","create_date","update_date","set","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport Lib from '../static/chat_lib';\r\n\r\nclass AddFriend extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            address: '',\r\n            friendId: '',\r\n            friendName: null\r\n        }\r\n        this.onChangeAddress = this.onChangeAddress.bind(this);\r\n        this.doSearch = this.doSearch.bind(this);\r\n        this.addFriends = this.addFriends.bind(this);\r\n    }\r\n\r\n    // 入力されたアドレスをステートにセット\r\n    onChangeAddress(e) {\r\n        this.setState({\r\n            address: e.target.value\r\n        })\r\n    }\r\n\r\n    // アドレスからユーザIDを検索する\r\n    doSearch() {\r\n        // 「.」を「*」にエンコード(firebaseでは検索に「.」が使用できないため)\r\n        let key = Lib.encodeAddress(this.state.address);\r\n        let db = firebase.database();\r\n        let ref = db.ref('address_info/' + key);\r\n        let userId;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            userId = snapshot.val();\r\n            this.setState({\r\n                friendId: userId,\r\n                friendName: ''\r\n            })\r\n            console.log('userId:' + userId);\r\n            if (userId != null) {\r\n                this.getUserInfo(userId);\r\n            }\r\n        });\r\n    }\r\n\r\n    // ユーザIDからユーザ情報を取得する\r\n    getUserInfo(userId) {\r\n        let db = firebase.database();\r\n        let ref = db.ref('user_info/' + userId);\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            let res = snapshot.val();\r\n            console.log('userInfo:' + JSON.stringify(snapshot.val()));\r\n            this.setState({\r\n                friendName: res.user_name\r\n            })\r\n        });\r\n    }\r\n\r\n    // 検索結果を表示する\r\n    createFriendInfo() {\r\n        let result;\r\n        if (this.state.friendName == '') {\r\n            result = ['※入力されたアドレスに紐づくユーザは存在しません。'];\r\n        } else {\r\n            result = [\r\n                    <div>\r\n                        <span>{this.state.friendName}</span>\r\n                        <button oncClick={this.addFriends}>追加</button>\r\n                    </div>\r\n                ]\r\n        }\r\n        console.log('result:' + result);\r\n        return result;\r\n    }\r\n\r\n    // 友人リストへ追加\r\n    addFriends() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('friend_info/1/' + this.state.friendId);\r\n        let now = new Date().toLocaleString();\r\n        let data = {\r\n            active_flag: 1,\r\n            create_date: now,\r\n            update_date: now\r\n        }\r\n        ref.set(data);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                メールアドレス：<input type=\"text\" size=\"40\" value={this.state.address} onChange={this.onChangeAddress} />\r\n                <button onClick={this.doSearch}>検索</button>\r\n                {this.state.friendName != null\r\n                ?\r\n                <div>\r\n                    {this.createFriendInfo()}\r\n                </div>\r\n                :\r\n                <div>\r\n                    ※追加したい友人のメールアドレスを入力して「検索」をクリックしてください。\r\n                </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default AddFriend;"]},"metadata":{},"sourceType":"module"}