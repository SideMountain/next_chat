{"ast":null,"code":"var _jsxFileName = \"C:\\\\env\\\\react\\\\next_chat\\\\components\\\\UserList.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport firebase from 'firebase';\nimport 'firebase/storage';\nimport Router from 'next/router';\n\nclass UserList extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"style\", {\n      fontSize: '12pt',\n      padding: '5px 10px'\n    });\n\n    this.state = {\n      data: [],\n      activeUserData: []\n    };\n    this.getUserList();\n  } // 友人データ取得\n\n\n  getUserList() {\n    let db = firebase.database();\n    let ref = db.ref('friend_info/1');\n    let self = this;\n    ref.orderByKey().on('value', snapshot => {\n      console.log('userList:' + JSON.stringify(snapshot.val()));\n      self.setState({\n        data: snapshot.val()\n      }, () => {\n        this.getActiveUserList();\n      });\n    });\n  } // アクティブユーザのみデータ取得\n\n\n  getActiveUserList() {\n    let activeUserList = [];\n    let db = firebase.database();\n    let ref;\n    let self = this;\n    console.log('dataは:' + JSON.stringify(this.state.data[3]));\n\n    for (let i in this.state.data) {\n      console.log('iは？:' + i);\n\n      if (this.state.data[i].active_flag == 0) {\n        continue;\n      }\n\n      ref = db.ref('user_info/' + i);\n      ref.orderByKey().on('value', snapshot => {\n        activeUserList.push(snapshot.val());\n        console.log('aaaaaaaaa:' + JSON.stringify(activeUserList));\n        self.setState({\n          activeUserData: activeUserList\n        });\n      });\n    }\n  } // 表示するユーザリストの生成\n\n\n  createUserList() {\n    let result = [];\n\n    if (this.state.activeUserData == null || this.state.activeUserData.length == 0) {\n      return [__jsx(\"tr\", {\n        key: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }\n      }, __jsx(\"th\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 33\n        }\n      }, \"NO DATA.\"))];\n    }\n\n    for (let i in this.state.activeUserData) {\n      result.push(__jsx(\"tr\", {\n        \"data-tag\": this.state.activeUserData[i].user_id,\n        onClick: this.go.bind(null, this.state.activeUserData[i].user_id),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }\n      }, __jsx(\"td\", {\n        class: \"user_image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }\n      }, \"image\"), __jsx(\"td\", {\n        class: \"user_name\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, this.state.activeUserData[i].user_name)));\n    }\n\n    return result;\n  } // ページ移動設定\n\n\n  go(userId) {\n    Router.push('/talk_room?user_id=' + userId);\n  }\n\n  render() {\n    if (this.state.data.length == 0) {\n      this.getUserList();\n    }\n\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, this.state.data.length == 0 ? __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Please wait...\") : __jsx(\"table\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, this.createUserList())));\n  }\n\n}\n\nexport default UserList;","map":{"version":3,"sources":["C:/env/react/next_chat/components/UserList.js"],"names":["React","Component","firebase","Router","UserList","constructor","props","fontSize","padding","state","data","activeUserData","getUserList","db","database","ref","self","orderByKey","on","snapshot","console","log","JSON","stringify","val","setState","getActiveUserList","activeUserList","i","active_flag","push","createUserList","result","length","user_id","go","bind","user_name","userId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport firebase from 'firebase';\r\nimport 'firebase/storage';\r\nimport Router from 'next/router';\r\n\r\nclass UserList extends Component {\r\n    style = {\r\n        fontSize: '12pt',\r\n        padding: '5px 10px'\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            activeUserData: []\r\n        }\r\n        this.getUserList();\r\n    }\r\n\r\n    // 友人データ取得\r\n    getUserList() {\r\n        let db = firebase.database();\r\n        let ref = db.ref('friend_info/1');\r\n        let self = this;\r\n        ref.orderByKey().on('value', (snapshot) => {\r\n            console.log('userList:' + JSON.stringify(snapshot.val()));\r\n            self.setState({\r\n                data: snapshot.val()\r\n            }, () => {this.getActiveUserList();});\r\n        });\r\n    }\r\n\r\n    // アクティブユーザのみデータ取得\r\n    getActiveUserList() {\r\n        let activeUserList = [];\r\n        let db = firebase.database();\r\n        let ref;\r\n        let self = this;\r\n        console.log('dataは:' + JSON.stringify(this.state.data[3]));\r\n\r\n        for (let i in this.state.data) {\r\n            console.log('iは？:' + i);\r\n            if (this.state.data[i].active_flag == 0) {\r\n                continue;\r\n            }\r\n            \r\n            ref = db.ref('user_info/' + i);\r\n            ref.orderByKey().on('value', (snapshot) => {\r\n                \r\n                activeUserList.push(snapshot.val());\r\n                console.log('aaaaaaaaa:' + JSON.stringify(activeUserList));\r\n                self.setState({\r\n                    activeUserData: activeUserList\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    // 表示するユーザリストの生成\r\n    createUserList() {\r\n        let result = [];\r\n        if (this.state.activeUserData == null || this.state.activeUserData.length == 0) {\r\n            return [<tr key=\"0\"><th>NO DATA.</th></tr>];\r\n        }\r\n        for (let i in this.state.activeUserData) {\r\n            result.push(\r\n                <tr data-tag={this.state.activeUserData[i].user_id}\r\n                onClick={this.go.bind(null, this.state.activeUserData[i].user_id)}>\r\n                    <td class=\"user_image\">image</td>\r\n                    <td class=\"user_name\">\r\n                            {this.state.activeUserData[i].user_name}\r\n                    </td>\r\n                </tr>\r\n            );\r\n        }\r\n        return result;\r\n    }\r\n\r\n    // ページ移動設定\r\n    go(userId) {\r\n        Router.push('/talk_room?user_id=' + userId);\r\n    }\r\n\r\n    render() {\r\n        if (this.state.data.length == 0) {\r\n            this.getUserList();\r\n        }\r\n        return (\r\n            <div>\r\n                {this.state.data.length == 0\r\n                ?\r\n                <p>Please wait...</p>\r\n                :\r\n                <table>\r\n                    <tbody>\r\n                        {this.createUserList()}\r\n                    </tbody>\r\n                </table>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default UserList;"]},"metadata":{},"sourceType":"module"}